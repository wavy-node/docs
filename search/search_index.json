{"config":{"lang":["es","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Wavy Node","text":"<p>Estamos desarrollando una API para proveedores de pagos electr\u00f3nicos e intercambios de criptomonedas en Am\u00e9rica Latina. Nuestra API monitorea, analiza y detecta transacciones en tiempo real para prevenir fraudes y lavado de dinero, abordando una regi\u00f3n con el segundo mayor crecimiento interanual de criptomonedas.</p> <p>Nuestra soluci\u00f3n identifica transacciones y se alinea con marcos regulatorios e impositivos como el GAFI, la Regla de Viajes, la Ley Fintech de M\u00e9xico y otras regulaciones locales. Mediante agentes de IA, generamos informes detallados sobre la actividad de los usuarios, realizamos verificaciones de antecedentes y brindamos puntajes de riesgo a trav\u00e9s del aprendizaje autom\u00e1tico, automatizando las investigaciones.</p> <p>Esto mejora el cumplimiento y la gesti\u00f3n de riesgos para nuestros clientes en toda la regi\u00f3n.</p>"},{"location":"#legislaciones-disponibles","title":"Legislaciones disponibles","text":""},{"location":"#mexico","title":"M\u00e9xico \ud83c\uddf2\ud83c\uddfd","text":"<ul> <li>Ley Fintech</li> <li>Reglas del Sistema de Pagos Electro\u0301nicos Bancarios (SPEI)</li> <li>Ley Federal para la prevencio\u0301n e Identificacio\u0301n de Operaciones con Recursos de Procedencia Ili\u0301cita (LFPIORPI)</li> </ul>"},{"location":"#etapa","title":"Etapa","text":"<p>MVP </p>"},{"location":"notifications/","title":"Notificaciones","text":"<p>Wavy Node ofrece la posibilidad de alertar acerca de actividades irregulares o normas infligidas por medio de webhooks.</p>"},{"location":"notifications/#quickstart","title":"Quickstart","text":"<ol> <li>Configura la url de tu webhook en el dashboard de Wavy Node.</li> <li>Define tus direcciones relevantes por medio del dashboard o usando la api</li> <li>Crea un servidor web que escuche, en esa url, las notificaciones de nuestro servicio de notificaciones.</li> <li>Responder con un status code <code>200</code> para marcar esa notificacio\u0301n como entregada. </li> </ol>"},{"location":"notifications/#seguridad","title":"Seguridad","text":"<p>Para asegurar la autenticidad e integridad de las notificaciones enviadas por Wavy Node, empleamos HMAC (Hash-based Message Authentication Code). Este m\u00e9todo le permite verificar que cada notificaci\u00f3n proviene genuinamente de nuestro servicio y que no ha sido alterada durante la transmisi\u00f3n. Funciona mediante la combinaci\u00f3n de una clave secreta (conocida solo por Wavy Node y usted y creada al momento de crear un webhook en nuestro dashboard) con el mensaje de notificaci\u00f3n. Esta combinaci\u00f3n se procesa a trav\u00e9s de una funci\u00f3n hash criptogr\u00e1fica para generar una firma \u00fanica.</p> <p>Cuando recibe una notificaci\u00f3n de Wavy Node, esta incluir\u00e1 la firma HMAC en un encabezado. Su servidor puede entonces usar la misma clave secreta y funci\u00f3n hash para calcular su propia firma a partir del mensaje recibido. Si ambas firmas coinciden, puede estar seguro de que la notificaci\u00f3n proviene de Wavy Node y que no ha sido alterada durante la transmisi\u00f3n. Esto protege contra la suplantaci\u00f3n de identidad y la manipulaci\u00f3n de datos.</p> <p>Usamos el <code>txHash</code> como mensaje a firmar, e\u0301ste puede ser encontrado en el payload de la notificacio\u0301n (body), mientras que la firma puede ser encontrada en el header <code>x-wavynode-hmac</code>.</p> <p>Este es un ejemplo de la funcio\u0301n de hash para Node.js <pre><code>import { createHmac } from 'node:crypto'\n\nconst createHmacSignature = (message: string, secret: string): string =&gt; {\n    const hmac = createHmac('sha256', secret)\n    hmac.update(message)\n\n    return hmac.digest('base64')\n}\n</code></pre></p>"},{"location":"notifications/#diagrama-de-secuencia","title":"Diagrama de secuencia","text":""},{"location":"notifications/#payload","title":"Payload","text":"<pre><code>{\n    \"id\": 1,\n    \"txHash\": \"some-tx-hash\",\n    \"chainId\": 42161,\n    \"address\": {\n        \"id\": 543,\n        \"address\": \"0xyour-address-involved\",\n        \"description\": \"Your address' description\"\n    },\n    \"inflictedLaws\": [\n        {\n            \"country\": \"mexico\",\n            \"name\": \"The name of the law inflicted\",\n            \"description\": \"Description of the law\",\n            \"risk\": \"warn\",\n            \"source\": \"Source of the law\",\n        },\n        {\n            ...\n        }\n    ]\n}\n</code></pre>"},{"location":"notifications/#estructuras-de-datos","title":"Estructuras de datos","text":"<pre><code>// typescript\ninterface ILaw {\n    country: string,\n    name: string,\n    description: string,\n    risk: 'warn' | 'illegal',\n    source?: string,\n}\n</code></pre>"},{"location":"api/","title":"Uso de la API","text":""},{"location":"api/#api-key","title":"API key","text":"<p>Para hacer uso correcto de la API se necesita crear una API key desde el dashboard de WavyNode y agregarla a cada request usando el header HTTP <code>x-api-header</code>: Por ejemplo: <pre><code>curl -H \"x-api-header: ApiKey tu-api-key\" https://api.wavynode.com/v1/chains\n</code></pre></p> <p>Nota: Algunas rutas de la API requieren que proporciones expl\u00edcitamente el <code>projectId</code> en la URL. Puedes encontrar el <code>projectId</code> de tu proyecto en el dashboard de WavyNode, en la secci\u00f3n de configuraci\u00f3n del proyecto (\"Project Settings\").</p>"},{"location":"api/#hacer-una-peticion","title":"Hacer una petici\u00f3n","text":"<ul> <li>Endpoint base: <code>https://api.wavynode.com</code></li> <li>Autenticaci\u00f3n: Header <code>x-api-header</code> (ver arriba)</li> </ul>"},{"location":"api/#formato-de-respuesta","title":"Formato de respuesta","text":"Campo Tipo Opcional <code>success</code> booleano no <code>data</code> any si <code>message</code> string si"},{"location":"api/v1/addresses/","title":"Direcciones","text":"<p>Permite configurar las direcciones en cadena relevantes para un proyecto espec\u00edfico.</p> <p>Info</p> <p>Las direcciones relevantes son aquellas por las que se enviar\u00e1n notificaciones de compliance con las legislaciones y alertas de interacciones con direcciones maliciosas al webhook configurado.</p>"},{"location":"api/v1/addresses/#todas-las-direcciones","title":"Todas las direcciones","text":"<ul> <li>Descripci\u00f3n: Obtiene todas las direcciones de un proyecto.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"address\": \"0x...\",\n            \"description\": \"Mi primera direcci\u00f3n relevante\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/addresses/#crear-nueva-direccion-relevante","title":"Crear nueva direcci\u00f3n relevante","text":"<ul> <li>Descripci\u00f3n: Crea una nueva direcci\u00f3n relevante para escuchar eventos de un proyecto.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses</code></li> <li>M\u00e9todo: POST</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> </ul> </li> <li>Body: (JSON)     <pre><code>{\n    \"address\": \"0x&lt;tu-direccion&gt;\",\n    \"description\": \"Alguna descripci\u00f3n aqu\u00ed\"\n}\n</code></pre></li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"api/v1/addresses/#eliminar-una-direccion","title":"Eliminar una direcci\u00f3n","text":"<ul> <li>Descripci\u00f3n: Remueve una direcci\u00f3n relevante de la lista de direcciones relevantes del proyecto.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses/{addressId}</code></li> <li>M\u00e9todo: DELETE</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> <li><code>addressId</code> (requerido): La direcci\u00f3n a eliminar</li> </ul> </li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"api/v1/api-keys/","title":"API keys","text":"<p>Gesti\u00f3n de API keys por medio de la API para un proyecto espec\u00edfico.</p> <p>Warning</p> <p>Esta documentaci\u00f3n describe la <code>keys</code> API para proyectos. Si buscas informaci\u00f3n acerca de c\u00f3mo crear una API key desde el dashboard lee Uso de la API.</p>"},{"location":"api/v1/api-keys/#todas-las-api-keys","title":"Todas las API keys","text":"<ul> <li>Descripci\u00f3n: Obtiene todas las API keys de un proyecto.</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"created_at\": \"2025-01-29T05:12:15+00:00\",\n            \"label\": \"Alguna etiqueta\",\n            \"key\": \"wavy_...\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/api-keys/#crear-api-key","title":"Crear API key","text":"<ul> <li>Descripci\u00f3n: Crea una API key para un proyecto</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys</code></li> <li>M\u00e9todo: POST</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> </ul> </li> <li>Body: (JSON)     <pre><code>{\n    \"label\": \"Alguna etiqueta\"\n}\n</code></pre></li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true,\n    \"data\": 1\n}\n</code></pre></li> </ul>"},{"location":"api/v1/api-keys/#eliminar-una-api-key","title":"Eliminar una API key","text":"<ul> <li>Descripci\u00f3n: Elimina una API key de un proyecto</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys/{keyId}</code></li> <li>M\u00e9todo: DELETE</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (requerido): El proyecto a consultar</li> <li><code>keyId</code> (requerido): La key a eliminar</li> </ul> </li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"api/v1/chains/","title":"Chains","text":"<p>Presenta informaci\u00f3n acerca de las diferentes cadenas compatibles con Wavy Node.</p>"},{"location":"api/v1/chains/#todas-las-cadenas","title":"Todas las cadenas","text":"<ul> <li>Descripci\u00f3n: Obtiene todas las cadenas compatibles con Wavy Node.</li> <li>Endpoint: <code>/v1/chains</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 42161,\n            \"name\": \"Arbitrum\",\n            \"rpc_url\": \"https://arb1.arbitrum.io/rpc\",\n            \"explorer_url\": \"https://arbiscan.io\",\n            \"currency_symbol\": \"ETH\",\n            \"currency_decimals\": 18\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/chains/#una-cadena","title":"Una cadena","text":"<ul> <li>Descripci\u00f3n: Obtiene informaci\u00f3n de una cadena en espec\u00edfico</li> <li>Endpoint: <code>/v1/chains/{chainId}</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"name\": \"Arbitrum\",\n        \"chain_id\": 42161,\n        \"currency_symbol\": \"ETH\",\n        \"market_cap\": \"329663113187.488651200\",\n        \"coin_price\": \"2735.25\",\n        \"coin_image\": \"https://coin-images.coingecko.com/coins/images/279/small/ethereum.png?1696501628\",\n        \"total_addresses\": \"67136720\",\n        \"total_blocks\": \"302652520\",\n        \"total_transactions\": \"1292967936\",\n        \"tvl\": null\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/wallets/","title":"Wallets","text":"<p>La <code>wallets</code> API le permite a los desarrolladores obtener informaci\u00f3n acerca de wallets espec\u00edficas, obtener su estado y balance.</p>"},{"location":"api/v1/wallets/#estado","title":"Estado","text":"<ul> <li>Descripci\u00f3n: Obtiene el estado de una determinada <code>{wallet}</code>.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/status</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (requerido): La direcci\u00f3n EVM a consultar</li> </ul> </li> <li>Query params:<ul> <li><code>chainId</code> (requerido): La chain sobre la cual hacer la consulta.</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"status\": \"dirty\",\n        \"tags\": [\n            \"tornado\"\n        ],\n        \"lastTxs\": [],\n        \"lastDapps\": []\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/wallets/#reporte","title":"Reporte","text":"<ul> <li>Descripci\u00f3n: Genera un reporte redactado acerca del estado de una determinada <code>{wallet}</code> usando IA.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/report</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (requerido): La direcci\u00f3n EVM a consultar</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": \"(El reporte generado por IA en markdown)\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"api/v1/wallets/#balance","title":"Balance","text":"<ul> <li>Descripci\u00f3n: Obtiene el balance total de la <code>{wallet}</code>.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/balance</code></li> <li>M\u00e9todo: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (requerido): La direcci\u00f3n EVM a consultar</li> </ul> </li> <li>Query params:<ul> <li><code>chainId</code> (requerido): La chain sobre la cual hacer la consulta.</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (requerido): Tu API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"total_balance\": 100, // en usd\n        \"assets\": []\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/","title":"Wavy Node","text":"<p>We\u2019re building an API for electronic payment providers and crypto exchanges across Latin America. Our API monitors, analyzes, and detects transactions in real time to help prevent fraud and money laundering \u2014 tackling a region with the second-highest year-over-year growth in crypto adoption.</p> <p>Our solution identifies transactions and aligns with regulatory and tax frameworks like the FATF, the Travel Rule, Mexico\u2019s Fintech Law, and other local regulations. Using AI agents, we generate detailed reports on user activity, run background checks, and deliver risk scores through machine learning \u2014 automating the investigation process.</p> <p>This improves compliance and risk management for our clients throughout the region.</p>"},{"location":"en/#available-regulations","title":"Available Regulations","text":""},{"location":"en/#mexico","title":"Mexico \ud83c\uddf2\ud83c\uddfd","text":"<ul> <li>Fintech Law  </li> <li>Electronic Interbank Payment System (SPEI) Rules  </li> <li>Federal Law for the Prevention and Identification of Transactions with Illicit Funds (LFPIORPI)</li> </ul>"},{"location":"en/#stage","title":"Stage","text":"<p>MVP</p>"},{"location":"en/notifications/","title":"Notifications","text":"<p>Wavy Node lets you receive alerts about irregular activity or regulatory violations through webhooks.</p>"},{"location":"en/notifications/#quickstart","title":"Quickstart","text":"<ol> <li>Set your webhook URL in the Wavy Node dashboard.</li> <li>Add your relevant addresses using the dashboard or the API.</li> <li>Create a web server that listens for notifications at that URL.</li> <li>Respond with a <code>200</code> status code to confirm the notification was successfully received.</li> </ol>"},{"location":"en/notifications/#security","title":"Security","text":"<p>To ensure the authenticity and integrity of notifications sent by Wavy Node, we utilize HMAC (Hash-based Message Authentication Code). This method allows you to verify that each notification genuinely originates from our service and has not been tampered with during transmission. It works by combining a secret key (known only by Wavy Node and you, and created when you set up a webhook in our dashboard) with the notification message. This combination is then processed through a cryptographic hash function to generate a unique signature.</p> <p>When you receive a notification from Wavy Node, it will include the HMAC signature in a header. Your server can then use the same secret key and hash function to calculate its own signature from the received message. If both signatures match, you can be confident that the notification is from Wavy Node and that its contents are unaltered. This safeguards against impersonation and data manipulation.</p> <p>We use the <code>txHash</code> as the message to be signed; this can be found in the notification payload (body). The signature itself will be in the <code>x-wavynode-hmac</code> header.</p> <p>Here's an example of the hashing function for Node.js: <pre><code>import { createHmac } from 'node:crypto'\n\nconst createHmacSignature = (message: string, secret: string): string =&gt; {\n    const hmac = createHmac('sha256', secret)\n    hmac.update(message)\n\n    return hmac.digest('base64')\n}\n</code></pre></p>"},{"location":"en/notifications/#sequence-diagram","title":"Sequence Diagram","text":""},{"location":"en/notifications/#data-structures","title":"Data Structures","text":"<pre><code>// typescript\ninterface ILaw {\n    country: string,\n    name: string,\n    description: string,\n    risk: 'warn' | 'illegal',\n    source?: string,\n}\n</code></pre>"},{"location":"en/api/","title":"API Usage","text":""},{"location":"en/api/#api-key","title":"API Key","text":"<p>To properly use the API, you need to create an API key from the WavyNode dashboard and include it in every request using the <code>x-api-header</code> HTTP header:</p> <pre><code>curl -H \"x-api-header: ApiKey your-api-key\" https://api.wavynode.com/v1/chains\n</code></pre> <p>Note: Some API routes require you to explicitly provide the <code>projectId</code> in the URL. You can find your project's <code>projectId</code> in the WavyNode dashboard, under the project settings section (\"Project Settings\").</p>"},{"location":"en/api/#make-a-request","title":"Make a request","text":"<ul> <li>Endpoint base: <code>https://api.wavynode.com</code></li> <li>Authentication: <code>x-api-header</code> header (see above)</li> </ul>"},{"location":"en/api/#response-format","title":"Response format","text":"Field Type Optional <code>success</code> boolean no <code>data</code> any yes <code>message</code> string yes"},{"location":"en/api/v1/addresses/","title":"Addresses","text":"<p>Allows you to configure relevant on-chain addresses for a specific project.</p> <p>Info</p> <p>Relevant addresses are those for which compliance notifications and alerts about interactions with malicious addresses will be sent to the configured webhook.</p>"},{"location":"en/api/v1/addresses/#all-addresses","title":"All addresses","text":"<ul> <li>Description: Retrieves all the addresses for a given project.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"address\": \"0x...\",\n            \"description\": \"My first relevant address\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/addresses/#create-new-relevant-address","title":"Create new relevant address","text":"<ul> <li>Description: Creates a new relevant address to listen for events for a given project.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses</code></li> <li>Method: POST</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> </ul> </li> <li>Body: (JSON)     <pre><code>{\n    \"address\": \"0x&lt;your-address&gt;\",\n    \"description\": \"Some description here\"\n}\n</code></pre></li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"en/api/v1/addresses/#delete-an-address","title":"Delete an address","text":"<ul> <li>Description: Removes a relevant address from the project's relevant address list.</li> <li>Endpoint: <code>/v1/projects/{projectId}/addresses/{addressId}</code></li> <li>Method: DELETE</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> <li><code>addressId</code> (required): The address to delete</li> </ul> </li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"en/api/v1/api-keys/","title":"API keys","text":"<p>API key management through the API for a specific project.</p> <p>Warning</p> <p>This documentation describes the <code>keys</code> API for projects. If you're looking for information on how to create an API key from the dashboard, read Using the API.</p>"},{"location":"en/api/v1/api-keys/#all-keys","title":"All keys","text":"<ul> <li>Description: Retrieves all the API keys for a given project.</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 1,\n            \"created_at\": \"2025-01-29T05:12:15+00:00\",\n            \"label\": \"Some label\",\n            \"key\": \"wavy_...\"\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/api-keys/#create-api-key","title":"Create API key","text":"<ul> <li>Description: Creates an API key for a given project</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys</code></li> <li>Method: POST</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> </ul> </li> <li>Body: (JSON)     <pre><code>{\n    \"label\": \"Some label\"\n}\n</code></pre></li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true,\n    \"data\": 1\n}\n</code></pre></li> </ul>"},{"location":"en/api/v1/api-keys/#delete-an-api-key","title":"Delete an API key","text":"<ul> <li>Description: Deletes an API key for a given project</li> <li>Endpoint: <code>/v1/projects/{projectId}/keys/{keyId}</code></li> <li>Method: DELETE</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> <li>Route params:<ul> <li><code>projectId</code> (required): The project to query</li> <li><code>keyId</code> (required): The key to delete</li> </ul> </li> </ul> </li> <li>Response: <pre><code>{\n    \"success\": true\n}\n</code></pre></li> </ul>"},{"location":"en/api/v1/chains/","title":"Chains.","text":"<p>Provides information about the different chains supported by Wavy Node.</p>"},{"location":"en/api/v1/chains/#all-chains","title":"All chains","text":"<ul> <li>Description: Retrieves all the chains supported by Wavy Node.</li> <li>Endpoint: <code>/v1/chains</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": 42161,\n            \"name\": \"Arbitrum\",\n            \"rpc_url\": \"https://arb1.arbitrum.io/rpc\",\n            \"explorer_url\": \"https://arbiscan.io\",\n            \"currency_symbol\": \"ETH\",\n            \"currency_decimals\": 18\n        }\n    ]\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/chains/#one-chain","title":"One chain","text":"<ul> <li>Description: Retrieves information about a specific chain</li> <li>Endpoint: <code>/v1/chains/{chainId}</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"name\": \"Arbitrum\",\n        \"chain_id\": 42161,\n        \"currency_symbol\": \"ETH\",\n        \"market_cap\": \"329663113187.488651200\",\n        \"coin_price\": \"2735.25\",\n        \"coin_image\": \"https://coin-images.coingecko.com/coins/images/279/small/ethereum.png?1696501628\",\n        \"total_addresses\": \"67136720\",\n        \"total_blocks\": \"302652520\",\n        \"total_transactions\": \"1292967936\",\n        \"tvl\": null\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/wallets/","title":"Wallets","text":"<p>The <code>wallets</code> API allows developers to retrieve information about specific wallets, including their status and balance.</p>"},{"location":"en/api/v1/wallets/#status","title":"Status","text":"<ul> <li>Description: Retrieves the status of a specific <code>{wallet}</code>.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/status</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (required): The EVM address to query</li> </ul> </li> <li>Query params:<ul> <li><code>chainId</code> (required): The chain to perform the query on</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"status\": \"dirty\",\n        \"tags\": [\n            \"tornado\"\n        ],\n        \"lastTxs\": [],\n        \"lastDapps\": []\n    }\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/wallets/#report","title":"Report","text":"<ul> <li>Description: Generates a written report about the status of a specific <code>{wallet}</code> using AI.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/report</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (required): The EVM address to query</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": \"(The AI-generated report in markdown)\"\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"en/api/v1/wallets/#balance","title":"Balance","text":"<ul> <li>Description: Retrieves the total balance of the <code>{wallet}</code>.</li> <li>Endpoint: <code>/v1/wallets/{wallet}/balance</code></li> <li>Method: GET</li> <li>Request:<ul> <li>Route params:<ul> <li><code>wallet</code> (required): The EVM address to query</li> </ul> </li> <li>Query params:<ul> <li><code>chainId</code> (required): The chain to perform the query on</li> </ul> </li> <li>Headers:<ul> <li><code>x-api-header: ApiKey &lt;api-key&gt;</code> (required): Your API key</li> </ul> </li> </ul> </li> <li>Response:<ul> <li>Body: (JSON)     <pre><code>{\n    \"success\": true,\n    \"data\": {\n        \"total_balance\": 100,\n        \"assets\": []\n    }\n}\n</code></pre></li> </ul> </li> </ul>"}]}